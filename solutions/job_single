#!/bin/bash

#SBATCH -J img_processing            # Job name
#SBATCH -o job.%j.out         # Name of stdout output file (%j expands to jobId)
#SBATCH -p cpu_shared             # To use the normal queue. There is also a queue called test
#SBATCH -N 1                  # Total number of nodes requested
#SBATCH -n 1                  # Total number of mpi tasks requested
#SBATCH -t 00:05:00           # Run time (hh:mm:ss) - here 5 minutes



ROOTDIR=/users/vdrach/training_automatisation
source ${ROOTDIR}/solutions/load_modules.sh

# For convenience, You can run a few commands. 
# It helps de debug. 

echo "batch script in:"
pwd

echo "Date /time is :"
date

ls -ltr

# then run your applciation. Two examples below. First using python, then using R.
Niter=10

EXE=${ROOTDIR}/simulation_ex.py


SRCFILE=${ROOTDIR}/data_preprocessed/1_796_1024.jpg


TMP=`basename  ${SRCFILE} .jpg`
id=`echo ${TMP} | cut -d'_' -f1`
N=`echo ${TMP} | cut -d'_' -f2`
M=`echo ${TMP} | cut -d'_' -f3`

OUTFILE=`echo $(pwd)/${id}_${N}_${M}_out.jpg`

python ${EXE} ${SRCFILE} ${N} ${M} ${Niter} ${OUTFILE}


